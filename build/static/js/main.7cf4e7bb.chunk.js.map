{"version":3,"sources":["helpers/format-date.ts","helpers/format-type.ts","components/pokemon-card.tsx","models/mock-pokemon.ts","services/pokemon-service.ts","components/pokemon-search.tsx","pages/pokemon-list.tsx","components/loader.tsx","pages/pokemon-detail.tsx","pages/page-not-found.tsx","components/pokemon-form.tsx","pages/pokemon-edit.tsx","models/pokemon.ts","pages/pokemon-add.tsx","App.tsx","index.tsx"],"names":["formatDate","date","Date","getDate","getMonth","getFullYear","formatType","type","color","PokemonCard","pokemon","borderColor","useState","setColor","history","useHistory","className","onMouseEnter","onMouseLeave","onClick","id","push","style","src","picture","alt","name","created","types","map","key","POKEMONS","hp","cp","PokemonService","this","isDev","fetch","then","response","json","catch","error","handleError","Promise","resolve","pokemons","data","isEmpty","find","method","body","JSON","stringify","headers","index","findIndex","filter","term","includes","Object","keys","length","console","process","PokemonSearch","setTerm","setPokemons","placeholder","value","onChange","e","target","searchPokemon","handleInputChange","to","PokemonList","useEffect","getPokemons","position","bottom","right","Loader","PokemonsDetail","match","setPokemon","getPokemon","params","width","margin","PageNotFound","PokemonForm","isEditForm","isValid","form","setForm","hasType","fieldName","fieldValue","newField","isAddForm","handleSubmit","preventDefault","newForm","startsWith","endsWith","test","validateForm","updatePokemon","addPokemon","isTypesValid","onSubmit","deletePokemon","htmlFor","marginBottom","disabled","checked","concat","currentType","selectType","PokemonEdit","Pokemon","PokemonAdd","getTime","App","exact","path","component","PokemonDetail","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.7cf4e7bb.chunk.js","sourcesContent":["const formatDate = (date: Date = new Date()): string => {\n    return `${date.getDate()}/${date.getMonth()+1}/${date.getFullYear()}`;\n}\n\nexport default formatDate;","  const formatType = (type: string): string => {\n    let color: string;\n\n    switch (type) {\n      case \"Feu\":\n        color = \"red lighten-1\";\n        break;\n      case \"Eau\":\n        color = \"blue lighten-1\";\n        break;\n      case \"Plante\":\n        color = \"green lighten-1\";\n        break;\n      case \"Insecte\":\n        color = \"brown lighten-1\";\n        break;\n      case \"Normal\":\n        color = \"grey lighten-3\";\n        break;\n      case \"Vol\":\n        color = \"blue lighten-3\";\n        break;\n      case \"Poison\":\n        color = \"deep-purple accent-1\";\n        break;\n      case \"Fée\":\n        color = \"pink lighten-4\";\n        break;\n      case \"Psy\":\n        color = \"deep-purple darken-2\";\n        break;\n      case \"Electrik\":\n        color = \"lime accent-1\";\n        break;\n      case \"Combat\":\n        color = \"deep-orange\";\n        break;\n      default:\n        color = \"grey\";\n        break;\n    }\n\n    return `chip ${color}`;\n  };\n\n  export default formatType;","import React, { FunctionComponent, useState } from \"react\";\nimport Pokemon from \"../models/pokemon\";\nimport \"./pokemon-card.css\";\nimport formatDate from '../helpers/format-date';\nimport formatType from '../helpers/format-type';\nimport { useHistory } from 'react-router-dom';\n\ntype Props = {\n  pokemon: Pokemon;\n  borderColor?: string;\n};\n\nconst PokemonCard: FunctionComponent<Props> = ({\n  pokemon,\n  borderColor = \"#009688\"\n}) => {\n  const [color, setColor] = useState<string>();\n  const history = useHistory();\n\n  const showBorder = () => {\n    setColor(borderColor);\n  };\n\n  const hideBorder = () => {\n    setColor(\"#f5f5f5\"); // On remet la bordure en grise.\n  };\n\n  const goTopokemon = (id: number) => {\n    history.push(`/pokemons/${id}`);\n  }\n\n\n  return (\n    <div\n      className=\"col s6 m4\"\n      onMouseEnter={showBorder}\n      onMouseLeave={hideBorder}\n      onClick={() => goTopokemon(pokemon.id)}\n    >\n      <div className=\"card horizontal\" style={{ borderColor: color }}>\n        <div className=\"card-image\">\n          <img src={pokemon.picture} alt={pokemon.name} />\n        </div>\n        <div className=\"card-stacked\">\n          <div className=\"card-content\">\n            <p>{pokemon.name}</p>\n            <p>\n              <small>{formatDate(pokemon.created)}</small>\n            </p>\n            {pokemon.types.map(type => (\n              <span key={type} className={formatType(type)}>\n                {type}\n              </span>\n            ))}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default PokemonCard;\n","import Pokemon from \"./pokemon\";\n\nexport const POKEMONS: Pokemon[] = [\n  {\n    id: 1,\n    name: \"Bulbizarre\",\n    hp: 25,\n    cp: 5,\n    picture:\"https://assets.pokemon.com/assets/cms2/img/pokedex/detail/001.png\",\n    types: [\"Plante\", \"Poison\"],\n    created: new Date()\n  },\n  {\n    id: 2,\n    name: \"Salamèche\",\n    hp: 28,\n    cp: 6,\n    picture:\"https://assets.pokemon.com/assets/cms2/img/pokedex/detail/004.png\",\n    types: [\"Feu\"],\n    created: new Date()\n  },\n  {\n    id: 3,\n    name: \"Carapuce\",\n    hp: 21,\n    cp: 4,\n    picture:\"https://assets.pokemon.com/assets/cms2/img/pokedex/detail/007.png\",\n    types: [\"Eau\"],\n    created: new Date()\n  },\n  {\n    id: 4,\n    name: \"Aspicot\",\n    hp: 16,\n    cp: 2,\n    picture:\"https://assets.pokemon.com/assets/cms2/img/pokedex/detail/013.png\",\n    types: [\"Insecte\", \"Poison\"],\n    created: new Date()\n  },\n  {\n    id: 5,\n    name: \"Roucool\",\n    hp: 30,\n    cp: 7,\n    picture:\"https://assets.pokemon.com/assets/cms2/img/pokedex/detail/016.png\",\n    types: [\"Normal\", \"Vol\"],\n    created: new Date()\n  },\n  {\n    id: 6,\n    name: \"Rattata\",\n    hp: 18,\n    cp: 6,\n    picture:\"https://assets.pokemon.com/assets/cms2/img/pokedex/detail/019.png\",\n    types: [\"Normal\"],\n    created: new Date()\n  },\n  {\n    id: 7,\n    name: \"Piafabec\",\n    hp: 14,\n    cp: 5,\n    picture:\"https://assets.pokemon.com/assets/cms2/img/pokedex/detail/021.png\",\n    types: [\"Normal\", \"Vol\"],\n    created: new Date()\n  },\n  {\n    id: 8,\n    name: \"Abo\",\n    hp: 16,\n    cp: 4,\n    picture:\"https://assets.pokemon.com/assets/cms2/img/pokedex/detail/023.png\",\n    types: [\"Poison\"],\n    created: new Date()\n  },\n  {\n    id: 9,\n    name: \"Pikachu\",\n    hp: 21,\n    cp: 7,\n    picture:\"https://assets.pokemon.com/assets/cms2/img/pokedex/detail/025.png\",\n    types: [\"Electrik\"],\n    created: new Date()\n  },\n  {\n    id: 10,\n    name: \"Sabelette\",\n    hp: 19,\n    cp: 3,\n    picture:\"https://assets.pokemon.com/assets/cms2/img/pokedex/detail/027.png\",\n    types: [\"Normal\"],\n    created: new Date()\n  },\n  {\n    id: 11,\n    name: \"Mélofée\",\n    hp: 25,\n    cp: 5,\n    picture:\"https://assets.pokemon.com/assets/cms2/img/pokedex/detail/035.png\",\n    types: [\"Fée\"],\n    created: new Date()\n  },\n  {\n    id: 12,\n    name: \"Groupix\",\n    hp: 17,\n    cp: 8,\n    picture:\"https://assets.pokemon.com/assets/cms2/img/pokedex/detail/037.png\",\n    types: [\"Feu\"],\n    created: new Date()\n  }\n];\n\nexport default POKEMONS;\n","import Pokemon from \"../models/pokemon\";\nimport POKEMONS from \"../models/mock-pokemon\";\n  \nexport default class PokemonService {\n  \n  static pokemons:Pokemon[] = POKEMONS;\n  \n  static isDev = (!process.env.NODE_ENV || process.env.NODE_ENV === 'development');\n  \n  static getPokemons(): Promise<Pokemon[]> {\n    if(this.isDev) {\n      return fetch('http://localhost:3001/pokemons')\n      .then(response => response.json())\n      .catch(error => this.handleError(error));\n    }\n  \n    return new Promise(resolve => {\n      resolve(this.pokemons);\n    });\n  }\n  \n  static getPokemon(id: number): Promise<Pokemon|null> {\n    if(this.isDev) {\n      return fetch(`http://localhost:3001/pokemons/${id}`)\n      .then(response => response.json())\n      .then(data => this.isEmpty(data) ? null : data)\n      .catch(error => this.handleError(error));\n    }\n  \n    return new Promise(resolve => {    \n      resolve(this.pokemons.find(pokemon => id === pokemon.id));\n    }); \n  }\n  \n  static updatePokemon(pokemon: Pokemon): Promise<Pokemon> {\n    if(this.isDev) {\n      return fetch(`http://localhost:3001/pokemons/${pokemon.id}`, {\n        method: 'PUT',\n        body: JSON.stringify(pokemon),\n        headers: { 'Content-Type': 'application/json'}\n      })\n      .then(response => response.json())\n      .catch(error => this.handleError(error));\n    }\n  \n    return new Promise(resolve => {\n      const { id } = pokemon;\n      const index = this.pokemons.findIndex(pokemon => pokemon.id === id);\n      this.pokemons[index] = pokemon;\n      resolve(pokemon);\n    }); \n  }\n  \n  static deletePokemon(pokemon: Pokemon): Promise<{}> {\n    if(this.isDev) {\n      return fetch(`http://localhost:3001/pokemons/${pokemon.id}`, {\n        method: 'DELETE',\n        headers: { 'Content-Type': 'application/json'}\n      })\n      .then(response => response.json())\n      .catch(error => this.handleError(error));\n    }\n  \n    return new Promise(resolve => {    \n      const { id } = pokemon;\n      this.pokemons = this.pokemons.filter(pokemon => pokemon.id !== id);\n      resolve({});\n    }); \n  }\n  \n  static addPokemon(pokemon: Pokemon): Promise<Pokemon> {\n    pokemon.created = new Date(pokemon.created);\n  \n    if(this.isDev) {\n      return fetch(`http://localhost:3001/pokemons`, {\n        method: 'POST',\n        body: JSON.stringify(pokemon),\n        headers: { 'Content-Type': 'application/json'}\n      })\n      .then(response => response.json())\n      .catch(error => this.handleError(error));\n    }\n  \n    return new Promise(resolve => {    \n      this.pokemons.push(pokemon);\n      resolve(pokemon);\n    }); \n  }\n  \n  static searchPokemon(term: string): Promise<Pokemon[]> {\n    if(this.isDev) {\n      return fetch(`http://localhost:3001/pokemons?q=${term}`)\n      .then(response => response.json())\n      .catch(error => this.handleError(error));\n    }\n  \n    return new Promise(resolve => {    \n      const results = this.pokemons.filter(pokemon => pokemon.name.includes(term));\n      resolve(results);\n    });\n  \n  }\n  \n  static isEmpty(data: Object): boolean {\n    return Object.keys(data).length === 0;\n  }\n  \n  static handleError(error: Error): void {\n    console.error(error);\n  }\n}\n","import React, { FunctionComponent, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport Pokemon from \"../models/pokemon\";\nimport PokemonService from \"../services/pokemon-service\";\n\nconst PokemonSearch: FunctionComponent = () => {\n    const [term, setTerm] = useState<string>(\"\");\n    const [pokemons, setPokemons] = useState<Pokemon[]>([]);\n\n    const handleInputChange = (e: React.ChangeEvent<HTMLInputElement>): void => {\n    const term = e.target.value;\n    setTerm(term);\n\n    if (term.length <= 1) {\n        setPokemons([]);\n        return;\n    }\n\n    PokemonService.searchPokemon(term).then(pokemons => setPokemons(pokemons));\n    };\n\n    return (\n    <div className=\"row\">\n        <div className=\"col s12 m6 offset-m3\">\n        <div className=\"card\">\n            <div className=\"card-content\">\n            <div className=\"input-field\">\n                <input\n                type=\"text\"\n                placeholder=\"Rechercher un pokémon\"\n                value={term}\n                onChange={e => handleInputChange(e)}\n                />\n            </div>\n            <div className=\"collection\">\n                {pokemons.map(pokemon => (\n                <Link\n                    key={pokemon.id}\n                    to={`/pokemons/${pokemon.id}`}\n                    className=\"collection-item\"\n                >\n                    {pokemon.name}\n                </Link>\n                ))}\n            </div>\n            </div>\n        </div>\n        </div>\n    </div>\n    );\n};\n\nexport default PokemonSearch;\n","import React, { FunctionComponent, useState, useEffect } from \"react\";\nimport Pokemon from \"../models/pokemon\";\nimport PokemonCard from \"../components/pokemon-card\";\nimport PokemonService from \"../services/pokemon-service\";\nimport PokemonSearch from \"../components/pokemon-search\";\nimport { Link } from 'react-router-dom';\n\n\n\n\nconst PokemonList: FunctionComponent = () => {\n    const [pokemons, setPokemons] = useState<Pokemon[]>([]);\n\n    useEffect(() => {\n        PokemonService.getPokemons().then(pokemons => setPokemons(pokemons));\n    }, []);\n\n    return (\n    <div className=\"containerList\">\n       \n        <div className=\"container\">\n        <div className=\"row\">\n        <PokemonSearch/>\n            {pokemons.map(pokemon => (\n            <PokemonCard key={pokemon.id} pokemon={pokemon} />\n                ))}\n        </div> \n            <Link className=\"btn-floating btn-large waves-effect waves-light red z-depth-3\" style={{position: 'fixed' , bottom: '25px', right:'25px'}} to=\"/pokemons/add\">\n            <i className=\"material-icons\">add</i>\n            </Link>\n        </div>  \n    </div>\n    );  \n};\n\nexport default PokemonList;\n","import React, { FunctionComponent } from \"react\";\n\nconst Loader: FunctionComponent = () => {\n    return (\n    <div className=\"preloader-wrapper big active\">\n        <div className=\"spinner-layer spinner-blue\">\n            <div className=\"circle-clipper left\">\n                <div className=\"circle\">\n                </div>\n            </div>\n            <div className=\"gap-patch\">\n                <div className=\"circle\">\n                </div>\n            </div>\n            <div className=\"circle-clipper right\">\n                <div className=\"circle\"></div>\n            </div>\n        </div>\n    </div>\n    );\n};\n\nexport default Loader;\n","import React, { FunctionComponent, useState, useEffect } from \"react\";\nimport { RouteComponentProps, Link } from \"react-router-dom\";\nimport Pokemon from \"../models/pokemon\";\nimport formatDate from \"../helpers/format-date\";\nimport formatType from \"../helpers/format-type\";\nimport PokemonService from \"../services/pokemon-service\";\nimport Loader from \"../components/loader\";\n\ntype Params = { id: string };\n\nconst PokemonsDetail: FunctionComponent<RouteComponentProps<Params>> = ({\n  match\n}) => {\n  const [pokemon, setPokemon] = useState<Pokemon | null>(null);\n\n  useEffect(() => {\n    PokemonService.getPokemon(+match.params.id).then(pokemon => setPokemon(pokemon));\n  }, [match.params.id]);\n\n  return (\n  <div>\n    {pokemon ? (\n    <div className=\"row\">\n      <div className=\"col s12 m8 offset-m2\">\n      <h2 className=\"header center\">{pokemon.name}</h2>\n      <div className=\"card hoverable\">\n        <div className=\"card-image\">\n        <img\n          src={pokemon.picture}\n          alt={pokemon.name}\n          style={{ width: \"250px\", margin: \"0 auto\" }}\n        />\n        <Link to={`/pokemons/edit/${pokemon.id}`} className=\"btn btn-floating halfway-fab waves-effect waves-light\">\n            <i className=\"material-icons\">edit</i>\n        </Link>\n        </div>\n        <div className=\"card-stacked\">\n        <div className=\"card-content\">\n          <table className=\"bordered striped\">\n          <tbody>\n            <tr>\n            <td>Nom</td>\n            <td>\n              <strong>{pokemon.name}</strong>\n            </td>\n            </tr>\n            <tr>\n            <td>Points de vie</td>\n            <td>\n              <strong>{pokemon.hp}</strong>\n            </td>\n            </tr>\n            <tr>\n            <td>Dégâts</td>\n            <td>\n              <strong>{pokemon.cp}</strong>\n            </td>\n            </tr>\n            <tr>\n            <td>Types</td>\n            <td>\n              {pokemon.types.map(type => (\n              <span key={type} className={formatType(type)}>\n                {type}\n              </span>\n              ))}\n            </td>\n            </tr>\n            <tr>\n            <td>Date de création</td>\n            <td>{formatDate(pokemon.created)}</td>\n            </tr>\n          </tbody>\n          </table>\n        </div>\n        <div className=\"card-action\">\n          <Link to=\"/\">Retour</Link>\n        </div>\n        </div>\n      </div>\n      </div>\n    </div>\n    ) : (\n    <h4 className=\"center\"><Loader/></h4>\n    )}\n  </div>\n  );\n};\n\nexport default PokemonsDetail;\n","import React, { FunctionComponent } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nconst PageNotFound: FunctionComponent = () => {\n    return (\n    <div className=\"center\">\n        <img\n        src=\"http://assets.pokemon.com/assets/cms2/img/pokedex/full/035.png\"\n        alt=\"Page non trouvée\"\n        />\n        <h1>Hey, cette page n'existe pas !</h1>\n        <Link to=\"/\" className=\"waves-effect waves-teal btn-flat\">\n        Retourner à l'accueil\n        </Link>\n    </div>\n    );\n};\n\nexport default PageNotFound;\n","import React, { FunctionComponent, useState } from \"react\";\nimport { useHistory } from 'react-router-dom';\nimport Pokemon from \"../models/pokemon\";\nimport formatType from \"../helpers/format-type\";\nimport PokemonService from \"../services/pokemon-service\";\n\ntype Props = {\n\tpokemon: Pokemon;\n  isEditForm: boolean\n};\n\ntype Field = {\n  value?: any,\n  error?: string,\n  isValid?: boolean\n}\n\ntype Form = {\n  picture: Field,\n  name: Field,\n  hp: Field,\n  cp: Field,\n  types: Field\n}\n\nconst PokemonForm: FunctionComponent<Props> = ({ pokemon, isEditForm }) => {\n\n  const [form, setForm] = useState<Form>({\n\n    picture: { value: pokemon.picture },\n    name: { value: pokemon.name, isValid: true},\n    hp: { value: pokemon.hp, isValid: true},\n    cp: { value: pokemon.cp, isValid: true},\n    types: { value: pokemon.types, isValid: true}\n  })\n\n  const history = useHistory();\n\n\tconst types: string[] = [\n\t\t\"Plante\",\n\t\t\"Feu\",\n\t\t\"Eau\",\n\t\t\"Insecte\",\n\t\t\"Normal\",\n\t\t\"Electrik\",\n\t\t\"Poison\",\n\t\t\"Fée\",\n\t\t\"Vol\",\n\t\t\"Combat\",\n\t\t\"Psy\"\n\t];\n\n  const hasType = (type: string): boolean => {\n    return form.types.value.includes(type);\n  }\n\n   const handleInputChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const fieldName: string = e.target.name;\n    const fieldValue: string = e.target.value;\n    const newField: Field = { [fieldName]: { value: fieldValue } };\n\n    setForm({ ...form, ...newField});\n  }\n\n  const isAddForm = () => {\n    return !isEditForm;\n  }\n  const validateForm = () => {\n    let newForm: Form = form;\n\n    // Validator url picture\n    if(isAddForm()){\n      const start = \"https://assests.pokemon.com/assets/cms2/img/pokedex/detail/\";\n      const end = \".png\";\n\n      if(!form.picture.value.startsWith(start) || !form.picture.value.endsWith(end)) {\n        const errorMsg: string = \"L'url n'est pas valide.\";\n        const newField: Field = { value: form.picture.value, error:   errorMsg, isValid: false };\n        newForm = { ...form, ...{ picture: newField} };\n      } else {\n        const newField: Field = { value: form.picture.value, error: '', isValid: true };\n        newForm = { ...form, ...{ picture: newField} };\n      }\n    }\n\n    // Validator name\n    if(!/^[a-zA-Zàéè ]{3,25}$/.test(form.name.value)) {\n      const errorMsg: string = 'Le nom du pokémon est requis (1-25).';\n      const newField: Field = { value: form.name.value, error: errorMsg, isValid: false };\n      newForm = { ...newForm, ...{ name: newField } };\n    } else {\n      const newField: Field = { value: form.name.value, error: '', isValid: true };\n      newForm = { ...newForm, ...{ name: newField } };\n    }\n\n    // Validator hp\n    if(!/^[0-9]{1,3}$/.test(form.hp.value)) {\n      const errorMsg: string = 'Les points de vie du pokémon sont compris entre 0 et 999.';\n      const newField: Field = {value: form.hp.value, error: errorMsg, isValid: false};\n      newForm = { ...newForm, ...{ hp: newField } };\n    } else {\n      const newField: Field = { value: form.hp.value, error: '', isValid: true };\n      newForm = { ...newForm, ...{ hp: newField } };\n    }\n\n    // Validator cp\n    if(!/^[0-9]{1,2}$/.test(form.cp.value)) {\n      const errorMsg: string = 'Les dégâts du pokémon sont compris entre 0 et 99';\n      const newField: Field = {value: form.cp.value, error: errorMsg, isValid: false};\n      newForm = { ...newForm, ...{ cp: newField } };\n    } else {\n      const newField: Field = { value: form.cp.value, error: '', isValid: true };\n      newForm = { ...newForm, ...{ cp: newField } };\n    }\n\n    setForm(newForm);\n    return newForm.name.isValid && newForm.hp.isValid && newForm.cp.isValid;\n  }\n\n\n   const selectType = (type: string, e: React.ChangeEvent<HTMLInputElement>): void => {\n    const checked = e.target.checked;\n    let newField: Field;\n\n    if(checked) {\n      // Si l'utilisateur coche un type, à l'ajoute à la liste des types du pokémon.\n      const newTypes: string[] = form.types.value.concat([type]);\n      newField = { value: newTypes };\n    } else {\n      // Si l'utilisateur décoche un type, on le retire de la liste des types du pokémon.\n      const newTypes: string[] = form.types.value.filter((currentType: string) => currentType !== type);\n      newField = { value: newTypes };\n    }\n\n    setForm({...form, ...{ types: newField }});\n  }\n   const handleSubmit = (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n    const isFormValid = validateForm();\n    if(isFormValid){\n\n      pokemon.picture = form.picture.value;\n      pokemon.name = form.name.value;\n      pokemon.hp = form.hp.value;\n      pokemon.cp = form.cp.value;\n      pokemon.types = form.types.value;\n\n      isEditForm ? updatePokemon() : addPokemon();\n\n    }\n    \n  }\n\n    const addPokemon = () => {\n      PokemonService.addPokemon(pokemon).then(() => history.push('/pokemons'))\n    }\n\n    const updatePokemon = () => {\n      PokemonService.updatePokemon(pokemon).then(() => history.push(`/pokemons/${pokemon.id}`))\n      history.push(`/pokemons/${pokemon.id}`);\n    }\n\n    const deletepokemon = () => {\n    PokemonService.deletePokemon(pokemon).then(() => history.push(`/pokemons`));\n  }\n  \n    const isTypesValid = (type: string): boolean => {\n    // Cas n°1: Le pokémon a un seul type, qui correspond au type passé en paramètre.\n    // Dans ce cas on revoie false, car l'utilisateur ne doit pas pouvoir décoché ce type (sinon le pokémon aurait 0 type, ce qui est interdit)\n    if (form.types.value.length === 1 && hasType(type)) {\n      return false;\n    }\n    \n    // Cas n°1: Le pokémon a au moins 3 types.\n    // Dans ce cas il faut empêcher à l'utilisateur de cocher un nouveau type, mais pas de décocher les types existants.\n    if (form.types.value.length >= 3 && !hasType(type)) { \n      return false; \n    } \n     \n    // Après avoir passé les deux tests ci-dessus, on renvoie 'true', \n    // c'est-à-dire que l'on autorise l'utilisateur à cocher ou décocher un nouveau type.\n    return true;\n  } \n\n \n\n \n\n\n\treturn (\n\t\t<form onSubmit={e => handleSubmit(e)}>\n\t\t\t<div className=\"row\">\n\t\t\t\t<div className=\"col s12 m8 offset-m2\">\n\t\t\t\t\t<div className=\"card hoverable\">\n            { isEditForm &&  (\n\t\t\t\t\t\t<div className=\"card-image\">\n\t\t\t\t\t\t\t<img\n\t\t\t\t\t\t\t\tsrc={pokemon.picture}\n\t\t\t\t\t\t\t\talt={pokemon.name}\n\t\t\t\t\t\t\t\tstyle={{ width: \"250px\", margin: \"0 auto\" }}\n\t\t\t\t\t\t\t/>\n              <span className=\"btn-floating halfway-fab waves-effect waves-light\">\n              <i onClick={deletepokemon} className=\"material-icons\">delete</i>\n              </span>\n\t\t\t\t\t\t</div>\n            )}\n\t\t\t\t\t\t<div className=\"card-stacked\">\n\t\t\t\t\t\t\t<div className=\"card-content\">\n              {/* Pokemon picture */}\n              {isAddForm() && (\n\t\t\t\t\t\t\t\t<div className=\"form-group\">\n\t\t\t\t\t\t\t\t\t<label htmlFor=\"name\">Image</label>\n\t\t\t\t\t\t\t\t\t<input id=\"picture\" name=\"picture\" type=\"text\" className=\"form-control\" value={form.picture.value} onChange={e => handleInputChange(e)}></input>\n                  {form.picture.error && \n                  <div className=\"card-panel red accent-1\">\n                    {form.picture.error}\n                  </div>\n                  }\n\t\t\t\t\t\t\t\t</div>\n                )}\n\t\t\t\t\t\t\t\t{/* Pokemon name */}\n\t\t\t\t\t\t\t\t<div className=\"form-group\">\n\t\t\t\t\t\t\t\t\t<label htmlFor=\"name\">Nom</label>\n\t\t\t\t\t\t\t\t\t<input id=\"name\" name=\"name\" type=\"text\" className=\"form-control\" value={form.name.value} onChange={e => handleInputChange(e)}></input>\n                  {form.name.error && \n                  <div className=\"card-panel red accent-1\">\n                    {form.name.error}\n                  </div>\n                  }\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t{/* Pokemon hp */}\n\t\t\t\t\t\t\t\t<div className=\"form-group\">\n\t\t\t\t\t\t\t\t\t<label htmlFor=\"hp\">Point de vie</label>\n\t\t\t\t\t\t\t\t\t<input id=\"hp\" name=\"hp\" type=\"number\" className=\"form-control\" value={form.hp.value} onChange={ e => handleInputChange(e)}></input>\n                  {form.hp.error && \n                  <div className=\"card-panel red accent-1\">\n                    {form.hp.error}\n                  </div>\n                  }\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t{/* Pokemon cp */}\n\t\t\t\t\t\t\t\t<div className=\"form-group\">\n\t\t\t\t\t\t\t\t\t<label htmlFor=\"cp\">Dégâts</label>\n\t\t\t\t\t\t\t\t\t<input id=\"cp\" name=\"cp\" type=\"number\" className=\"form-control\" value={form.cp.value} onChange={ e => handleInputChange(e)}></input>\n                  {form.cp.error && \n                  <div className=\"card-panel red accent-1\">\n                    {form.cp.error}\n                  </div>\n                  }\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t{/* Pokemon types */}\n\t\t\t\t\t\t\t\t<div className=\"form-group\">\n\t\t\t\t\t\t\t\t\t<label>Types</label>\n\t\t\t\t\t\t\t\t\t{types.map(type => (\n\t\t\t\t\t\t\t\t\t\t<div key={type} style={{ marginBottom: \"10px\" }}>\n\t\t\t\t\t\t\t\t\t\t\t<label>\n\t\t\t\t\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\t\t\t\t\tid={type}\n\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"checkbox\"\n\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"filled-in\" value={type} disabled={!isTypesValid(type)} checked={hasType(type)} onChange={ e => selectType(type, e)}\n\t\t\t\t\t\t\t\t\t\t\t\t></input>\n\t\t\t\t\t\t\t\t\t\t\t\t<span>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<p className={formatType(type)}>{type}</p>\n\t\t\t\t\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div className=\"card-action center\">\n\t\t\t\t\t\t\t\t{/* Submit button */}\n\t\t\t\t\t\t\t\t<button type=\"submit\" className=\"btn\">\n\t\t\t\t\t\t\t\t\tValider\n\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</form>\n\t);\n};\n\nexport default PokemonForm;\n","import React, { FunctionComponent, useState, useEffect } from \"react\";\nimport { RouteComponentProps } from \"react-router-dom\";\nimport PokemonForm from \"../components/pokemon-form\";\nimport Pokemon from \"../models/pokemon\";\nimport PokemonService from \"../services/pokemon-service\";\nimport Loader from \"../components/loader\";\n\ntype Params = { id: string };\n\nconst PokemonEdit: FunctionComponent<RouteComponentProps<Params>> = ({\n    match\n}) => {\n    const [pokemon, setPokemon] = useState<Pokemon | null>(null);\n\n    useEffect(() => {\n        PokemonService.getPokemon(+match.params.id).then(pokemon => setPokemon(pokemon));\n    }, [match.params.id]);\n\n    return (\n    <div>\n        {pokemon ? (\n        <div className=\"row\">\n            <h2 className=\"header center\">Éditer {pokemon.name}</h2>\n            <PokemonForm pokemon={pokemon} isEditForm={true}></PokemonForm>\n        </div>\n        ) : (\n        <h4 className=\"center\"><Loader/></h4>\n        )}\n    </div>\n    );\n};\n\nexport default PokemonEdit;\n","export default class Pokemon {\n  // 1. Typage des propiétés d'un pokémon.\n    id: number;\n    hp: number;\n    cp: number;\n    name: string;\n    picture: string;\n    types: Array<string>;\n    created: Date;\n\n  // 2. Définition des valeurs par défaut des propriétés d'un pokémon.\n    constructor(\n    id: number,\n    hp: number = 100,\n    cp: number = 10,\n    name: string = \"...\",\n    picture: string = \"https://assets.pokemon.com/assets/cms2/img/pokedex/detail/XXX.png\",\n    types: Array<string> = [\"Normal\"],\n    created: Date = new Date()\n    ) {\n    // 3. Initialisation des propiétés d'un pokémons.\n    this.id = id;\n    this.hp = hp;\n    this.cp = cp;\n    this.name = name;\n    this.picture = picture;\n    this.types = types;\n    this.created = created;\n    }\n}\n","import React, { FunctionComponent, useState } from 'react';\nimport PokemonForm from '../components/pokemon-form';\nimport Pokemon from '../models/pokemon';\n\n\nconst PokemonAdd: FunctionComponent = () => {\n    const [id] = useState<number>(new Date().getTime());\n    const [pokemon] = useState<Pokemon>( new Pokemon(id));\n\n    return (\n        <div className=\"row\">\n            <h2 className=\"header center\">Ajouter un pokemon</h2>\n            <PokemonForm pokemon={pokemon} isEditForm={false}></PokemonForm>\n        </div>\n    );\n}\n\nexport default PokemonAdd;","import React, { FunctionComponent } from \"react\";\nimport PokemonList from \"./pages/pokemon-list\";\nimport PokemonDetail from \"./pages/pokemon-detail\";\nimport { BrowserRouter as Router, Switch, Route, Link } from 'react-router-dom';\nimport PageNotFound from \"./pages/page-not-found\";\nimport PokemonEdit from \"./pages/pokemon-edit\";\nimport PokemonAdd from \"./pages/pokemon-add\";\n\nimport \"./App.css\";\n \nconst App: FunctionComponent = () => {\n    \n    return ( \n        <Router>\n        <div className=\"containerApp\">\n        {/* La barre de navigation commum à toutes les pages*/}\n            <nav>\n                <div className=\"nav-wrapper teal\">\n                    <Link to=\"/\" className=\"brand-logo center\">Pokédex</Link>\n                </div>\n                </nav>\n                {/* Le système de gestion des routes de notre application*/}\n                <Switch>\n                    <Route exact path=\"/\" component={PokemonList}/>\n                    <Route exact path=\"/pokemons\" component={PokemonList}/>\n                    <Route exact path=\"/pokemons/add\" component={PokemonAdd}/>\n                    <Route exact path=\"/pokemons/edit/:id\" component={PokemonEdit}/>\n                    <Route path=\"/pokemons/:id\" component={PokemonDetail} />\n                    <Route component={PageNotFound} /> {/* mettre toujours en derniere position*/}\n                </Switch>\n            </div>\n        </Router>\n       \n    );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n    <App/>,\n    document.getElementById('root')\n);\n"],"sourceRoot":""}